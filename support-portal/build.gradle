buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.9"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'


jar {
	baseName = 'support-portal'
	version = ''
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://maven.vaadin.com/vaadin-addons" }
}


ext {
	vaadinVersion = '8.1.0'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.session:spring-session')
	compile 'com.querydsl:querydsl-core:4.1.4'
	compile 'com.querydsl:querydsl-jpa:4.1.4'
	compile group: 'org.apache.commons', name: 'commons-compress', version: '1.15'
	compile('com.vaadin:vaadin-spring-boot-starter')
	compile fileTree(dir: 'libs', include: '*.jar')
	compile project(':common')
	compile project(':common-model')
	runtime('org.hsqldb:hsqldb')
	runtime('mysql:mysql-connector-java')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	optional "org.springframework.boot:spring-boot-configuration-processor"
}

querydsl {
	querydslDefault = true
	jpa = true
	querydslSourcesDir = 'build/querydsl'
}

idea {
	module {
		sourceDirs += file('build/querydsl')
		generatedSourceDirs += file('build/querydsl')
	}
}

bootRun {
	if ( project.hasProperty('jvmArgs') ) {
		jvmArgs = (project.jvmArgs.split("\\s+") as List)

	}
}

task copyModelFilesForQueryDslProcessing(type: Copy) {
	from '../common-model/src/main/java/com/opuscapita/peppol/commons/revised_model'
	into 'src/main/java/com/opuscapita/peppol/commons/revised_model'

}

tasks.withType(JavaExec) {
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

compileJava.dependsOn(processResources)
compileJava.dependsOn(copyModelFilesForQueryDslProcessing)

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
	}
}
