---
#sending file to outbound, then doing asserts for each module

#- name: generate uuid with shell

- set_fact: uuid="{{99999 | random | to_uuid}}"
- debug: var=uuid

#- set_fact: file_base = "{{ file | basename }}"
#- debug: var = file_base

#- name: Copy file to outbound from-a2a dir
#  become: "{{sudo}}"
#  become_user: "{{user}}"
#  copy:
#    remote_src: True
#    src: "{{file}}"
#    dest: "{{transport_from_a2a_path}}/{{ file| basename }}-{{ uuid }}.xml"

#--------------------------------------------------
# generate random values for XML files:
- set_fact: receiver_id=9908:987987987
- set_fact: receiver_endpoint_id=987987987
- set_fact: receiver_company_id_vat=987987987MVA
- set_fact: receiver_company_id_orgnr=987987987
- set_fact: receiver_name="{{ 999999999 | random }}"
- set_fact: sender_id=9908:987987987
- set_fact: sender_endpoint_id=987987987
- set_fact: sender_company_id_vat=987987987MVA
- set_fact: sender_company_id_orgnr=987987987
- set_fact: sender_name="{{ 999999999 | random }}"
- set_fact: document_id="{{ 999999999 | random | to_uuid }}"

- debug: var=receiver_id
- debug: var=receiver_endpoint_id
- debug: var=receiver_company_id_vat
- debug: var=receiver_company_id_orgnr
- debug: var=receiver_name
- debug: var=sender_id
- debug: var=sender_endpoint_id
- debug: var=sender_company_id_vat
- debug: var=sender_company_id_orgnr
- debug: var=sender_name
- debug: var=document_id
#--------------------------------------------------

- name: copy test files
  become: "{{sudo}}"
  become_user: "{{user}}"
  template:
    src: "{{ file }}"
    dest: "{{transport_from_a2a_path}}{{ file | basename }}-{{ uuid }}.xml"

#- name: find fileName
#  shell: echo "{{file_uuid}}" | grep .xml |xargs -L 1 basename
#  register: fileName
#- set_fact: fileName="{{fileName.stdout}}"
#- debug: var=fileName


#report START ------:
- set_fact: counter="{{counter| int +1 }}"
  register: counter
- debug: var=counter

- name: create report headers
  delegate_to: localhost
  lineinfile:
    create: yes
    dest: "{{report_path}}/outbound-invalid-report-{{ansible_date_time.iso8601_basic}}.csv"
    state: present
    line: "Test num.,Test file,transmissionId,transport-from-a2a,preprocessing result,email-notificator result,internal-routing result,validator result"

- name: update test results
  delegate_to: localhost
  lineinfile:
    create: yes
    dest: "{{report_path}}/outbound-report-{{ansible_date_time.iso8601_basic}}.csv"
    state: present
    line: '{{counter}},{{file}},{{uuid}}'
#report END -------

#- pause:
#    seconds: 130

- include: log_checker.yml
...
