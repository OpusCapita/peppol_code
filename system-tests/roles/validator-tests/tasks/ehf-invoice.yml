---
- set_fact: file=/test-materials/EHF/EHF_2.0.12/invoice/NONAT-T10-R031.xml
- set_fact: expected="'NONAT-T10-R031'"
- set_fact: valid="false"
- set_fact: active="true"

- name: send {{ file }} to validator REST
  shell: curl -F "file=@{{ file }}" localhost:8083/validator/validate
  register: result

- set_fact: result_errors="{{ (result.stdout | from_json).errors }}"
- set_fact: result_warnings="{{ (result.stdout | from_json).warnings }}"
- set_fact: result_passed="{{ (result.stdout | from_json).passed }}"
- set_fact: result_identifier="{{ result_errors.0.validationError.identifier }}"

- name: check if validation is correct {{ file }}
  ignore_errors: yes
  assert:
    that:
      - "result_warnings == []"
      - "result_passed == {{ valid }}"
      - "result_identifier == {{ expected }}"
    msg: "Test for {{ file }} failed"
  when: active==true
  register: assert_result

- include: reporter.yml
#-------------------------------

- set_fact: file=/test-materials/EHF/EHF_2.0.12/invoice/NONAT-T10-R032.xml
- set_fact: expected="'NONAT-T10-R032'"
- set_fact: valid="false"
- set_fact: active="true"

- name: send {{ file }} to validator REST
  shell: curl -F "file=@{{ file }}" localhost:8083/validator/validate
  register: result

- set_fact: result_errors="{{ (result.stdout | from_json).errors }}"
- set_fact: result_warnings="{{ (result.stdout | from_json).warnings }}"
- set_fact: result_passed="{{ (result.stdout | from_json).passed }}"
- set_fact: result_identifier="{{ result_errors.0.validationError.identifier }}"

- name: check if validation is correct {{ file }}
  ignore_errors: yes
  assert:
    that:
      - "result_warnings == []"
      - "result_passed == {{ valid }}"
      - "result_identifier == {{ expected }}"
    msg: "Test for {{ file }} failed"
  when: active==true
  register: assert_result

- include: reporter.yml
#-------------------------------

...
